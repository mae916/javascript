자바스크립트
 - 사용자와 상호작용하는 동작을 통제하는 역할을 주로 한다.

1.자바스크립트의 구성

   1)브라우저 : 자바스크립트를 해석해주는 역할 (이용자쪽에서 해석해줌)
    :'자바스크립트 런타임' 이라고 함.
        :런타임:자바스크립트를 해석해주고 해석한대로 출력해주는 것.
        -자바스크립트 코어(ECMAScript)
        -브라우저 객체 모델
            -브라우저에서만 제공되는 기능 모음
            브라우저에서만 일어나는것
                ex) 알림메세지, 자용자가 클릭하는것, html을 출력해주는것

   2)Node.js : 자바스크립트를 해석해주는 역할 (서버 쪽에서 해석해줌)
    :'자바스크립트 런타임' 이라고 함.
        -자바스크립트 코어(ECMAScript)
        -Node.js 내장 모듈


        두개가 자바스크립트 코어가 공통됨.
        브라우저에서 자바스크립트를 공부하면 노드제이에스도 이해하기 쉬움.

2.실습환경
    1)브라우저 (검사 - 콘솔)
        F12 - console
        Enter 키 -> 자바스크립트가 해석되고 실행됨
        Shift + Enter 키 -> 다음줄로 개행

        console -> 변수의 값, 객체의 값
            console.log : 단순 메세지, 값 출력 할때
            console.dir : 객체를 구조화 하여 확인 할때
            console.error : 에러 형태로 값을 출력 할때

    2).Node.js 콘솔 또는 파일 실행
     cmd에 node -v라고 검색하면 .Node.js 가 있는지 알수있음
    3)HTML 웹페이지를 만들어 실행 (이벤트, HTML을 다루는 기능)
        <script> 자바스크립트 코드 </script>
        <script src='외부 자바 스크립트 파일'></script>
   
3.자바스크립트 주석
    :주석을 하게되면 자바스크립트 해석기가 실행하지 않는다.
    -소스를 숨김처리, 실행을 중단
    -소스에 대한 설명
    1줄 주석 // ~
    
    여러 줄 주석 /* ~ */

4.변수 (variable = var)
    - 변경 할 수 있는 값을 담는 공간
    - 값을 기억하기 위한 공간 - 메모리
    - 변수라고 알려주기 위한 방법
        -var 선언자를 붙여주면 변수가 된다
            var a -> 변수는 a이고 a라는 저장 공간

            var = 1; (var에 1이라는 값이 저장된것)
                 - 수학에서 = -> 값이 같다.
                 - 프로그래밍에서 = -> 값을 대입한다. (오른쪽에 있는 값을 a라는 공간에 저장한다.)
                var a = 1;  - a라는 변수를 선언하고 1이라는 값을 변수에 저장한다.
                var b = 2;
                var c = a + b; 

                var a = 1 (초기화 : 선언과 동시에 값을 대입하는것)
                var a; -> 선언
                    a = 1; -> 대입

                변수를 여러개 선언, 대입 하는 방법
               - var a;
                 var b;
                 var c;
                    -> var a,b,c; 

               - var a = 1
                 var b = 1
                 var c = 1
                    -> var a = 1 , b = 2, c = 3;

    변수의 명명 규칙
    1)사용할 수 있는 문자
        a.알파벳(대문자, 소문자)
        b.숫자 (0~9)
        c.밑줄 (_)
        d.달러기호($)

    2)숫자는 변수의 첫번째 문자로 올 수 없다
    3)예약어는 쓸 수 없다
        자바스크립트 내에서 이미 기능적으로 사용되는 키워드
            : for, new, while, typeof, instanceof....

    예)var school (O)
        var num1 (O)
        var school-num (X) - 특수문자는 _와 $만 가능
        var 1st (X) - 숫자는 가장 첫번째 문자로 올 수 없다
        var $element (O)

    변수에 저장 할 수 있는 자료형(원시타입 + 객체 -> 다 담을 수 있다.)
    1) 원시 타입
        -숫자, 문자, 논리값(참, 거짓), 
        -null : 값이 없는 상태
        -undefined : 값이 정의되어 있지 않은 상태에 대한 값
            (변수를 선언만 한 상태)
            -모든 변수의 기본 값

            문자(string)
                -따옴표('' , "") 감싸서 정의하면 문자가 된다.
                    var scfool = "연희직업전문학교";
                - 문자를 여러개 이어 붙일때 -> +
                    var school1 = "연희";
                    var school2 = "직업전문학교";
                    var school3 = school1 + school2;
                    var school4 = "연희" + "직업전문학교";

            숫자(number)
                -  그냥 수만 입력
                var num = 100;

            undefined (변수를 선언만 한, 값이 정의 되어있지 않은 상태에 대한 값)
                var a; == var a = undefinded;

                var a = 1; // 초기화
                    1) var a = undefined;
                    2) a = 1;

            null : 비어있는 상태를 나타내는 값
                var a = null;  (비어있는 상태)

            논리값(boolean , bool)
                -참, 거짓
                    true(참), false(거짓)

                    false로 인식하는 경우
                    -false, 0, null, ", undefined

            typeof - 자료형을 체크하는 연산자
            
     참고)
        1)문장의 끝은 ;으로 끝난다.

    2) 객체

    자바스크립트 - 원시타입 + 객체 로 이루어져있음


    변수를 선언하면 window 하위 객체 속성으로 정의가 된다.

    브라우저 객체 모델 -> 최상위 객체
        window

        1)window 객체 - 먼저 로드

        2)var a = 1;
            ->변수를 선언하면 window 객체의 하위 속성으로 지정
            그래서 window.a; 하면 1이 나옴
        
    참고)
    브라우저에서 HTML이 로딩 전후
    -> 브라우저 객체모델에 해당하는 각종 객체들이 로드
    (window)

    console.log(a); // a = undefined
    var a = 1;

  console.log(a); 뒤에 var a = 1; 가 나와도 오류가 안나는 이유, 로딩되는 순서
    -> window.a = undefined; -> window.a에 가장 먼저 대입이 된다.
    -> console.log(a);
    -> a = 1;
        ->변수의 끌어올림(hoisting)














            
