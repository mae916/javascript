생성자
  -객체를 생성
  -객체를 만드는 틀
  -자동차 공장

  함수 객체를 가지고 생성자를 만든다

  function 생성자명(.....) {
    // 생성자 정의
    this.속성명 = 값;(원시타입, 객체, 함수 객체)    ==> 객체 생성하는 틀(생성자)
  }

  객체 생성 연산자
  new

-> 생성자로부터 객체가 힙 영역에 생성

  생성된 객체 - 인스턴스

  function Person() {
		this.age = 40;
		this.gender = "F";
		this.walk = function() {
			console.log("걷기");
		};
	}

  정의된 속성 접근은 객체 생성 이후 접근이 가능
  this --> 객체가 생성된 후 존재
      --> 생성된 객체(인스턴스) 주소를 가지고 있는 변수
      --> 생성자 내부에만 존재하는 변수
      --> 외부에 생선된 생성자 변수와 동일한 주소를 가지고 있다
      --> 차이점은 외부, 내부

  const person1 = new Person();

  함수 -> 함수, 생성자
  관례적으로 생성자는 앞 첫글자를 대문자로
  관례적으로 함수는 앞글자가 소문자

  함수명 명명 방식
  단어의 시작은 대문자 -> 첫글자는 소문자 -> 카멜케이스 (일반변수)

  function orderProcess() {

	}

	const orderProcess = "delivery";

  생성자 명명 방식
  단어의 시작은 대문자 -> 첫글자도 대문자 -> 파스칼 케이스

  function OrderProcess() {

  	}


  	생성자 인수 --> 객체 생성시 초기화 역할
  	function Person(age, gender) {
  		this.age = age;
  		this.gender = gender;
  	}

  	const person1 = new Person(40, "F");
  	Person {age: 40, gender: "F"}

  	const person2 = new Person(50, "M");
  	Person {age: 50, gender: "M"}

    함수
    	- 행위 - 처리의 일련과정을 묶어 놓은 기능단위

    	인수 - 처리할 영역에 들어갈 값
    	function 함수명 (인수, 인수 ... ) {
    		// 처리 영역

    		return 값; // 처리된 결과 값을 반환
    	}

    	function sum(x) {
    		const result = x * 2 + 2

    		return result;
    	}


    	함수를 사용하려면? - 호출
    	함수명();

    	만약 인수가 있다면?
    	함수명(값);


    	인수가 없는 함수가 가능한가?
    	- 가능
    	function 함수명() {

    	}

    	함수명();

    	반환값이 없는 함수가 가능한가?
    	- 가능
    	- 내부적으로는 return이 없어도 undefined를 반환
    		(return undefined;)


    	전역변수
    		- 함수 외의 지역에서 정의되어 있는 변수
    		- 함수 밖, 함수 안 모두 쓸 수 있는 변수

    	지역변수
    		- 함수 안에서 정의되어 있는 변수
    		- 함수 안에서만 쓸 수 있는 변수
    		- 함수가 호출 될때만 사용 가능
    		- 함수가 호출되는 동안에만 값이 유효하다
    		- 함수가 스택영역 메모리에 올라가 있는 동안에만 유효 하다

    		전역변수 명과 지역변수 명이 같으면
    		-> 지역에서는 전역변수를 사용하지 않고, 지역변수를 사용



    메모리
    	데이터 영역
    	힙영역

    	스택영역 - 함수가 호출되면 메모리에 실리는 영역
    				  함수의 호출이 완료가 되면 함수가 메모리 영역에서 사라진다

    	스택(Stack) - 쌓다
    	큐(Queue) - 대기열


    자바스크립트에서 함수
    	-> 함수 객체

    	자바스크립트에서 함수는 1급 객체
    		- 함수를 인수로 쓸 수 있다.
    			예)
    			function testFunc(innerFunc) {
    				innerFunc();
    			}

    			const innerFunc = function() {
    				console.log("인수를 함수로 쓰는 내부 함수");
    			};

    		- 함수를 반환 값으로 사용 할 수 있다.
    			function testFunc() {
    				return function innerFunc() {
    					console.log("함수를 반환");
    				};
    			}

    			const func = testFunc();
    			func();

    		-- 함수 안에 함수를 정의 할 수 있다
    		-- 클로져


    	모든 변수 -> 스택 메모리에 저장 된다




    	function sum() {

    	};

    	const sum = function() {

    	};

    	익명함수 - 이름이 없는 함수


    	생성자



    	자바스크립트에서 함수 -> 함수 객체
    	Function 객체를 통해서 생성된 객체 -> Heap 영역


    	즉시 실행 함수
    	호출을 하는 별도 없이 바로 호출
    	(function() {
    		// 즉시 실행할 부분
    	})();

    	(function(a, b) {
    		// 실행 영역

    		// 반환 값 정의 가능
    	})(2,3);

    	const result = (function(a, b) {
    		return a+b;
    	})(2,3);
