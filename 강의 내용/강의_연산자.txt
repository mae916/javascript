연산 -> 계산

1.산술연산자
    사칙연산
        더하기(+)
        빼기(-)
        곱하기(*)
        나누기(/)

    나머지(%) - 나머지를 구하는 연산자
        5 % 3 -> 5에서 3을 나눈후 나머지는 2

2.문자 결합 연산자(+)
    "연희" + "직업전문학교" --> "연희직업전문학교";

3.대입연산자 (=)
    수학 = -> 같다
    프로그래밍 = -> 대입(저장)
    var a = 1;
    1이라는 값을 a라는 변수에 대입(저장)한다.(오른쪽 값을 왼쪽에 대입(저장))

4.복합대입연산자    ?????????????????????????
    (산술연산자 + 대입 연산자가 축약된 표현)

    var a = 1;
    var b = 2;

    a = a + b; ===== a += b; <- 이렇게 쓸 수 있음.
        :a의 정의가 바뀌는 것
    a = a * b; ===== a *= b;

    a = a / b; ===== a /= b;

    a = a % b; ===== a %= b;

5.증감연산자
    -증가, 감소와 관련된 연산자

    증가
    var a = 1;
    a = a + 1; // a = 2  --> a++;
    a = a + 1; // a = 3  --> a++;
    a = a + 1; // a = 4  --> a++;

    감소
    var a = 10;
    a = a - 1; // a = 9  --> a--;
    a = a - 1; // a = 8  --> a--;
    a = a - 1; // a =   --> a--;

    ++a;
    a++;

    var b = ++a;
    1)연산먼저
    a = a + 1;
    2)대입
    b = a;

    var b = a++;
    1)대입먼저
    b = a;
    2)연산
    a = a + 1;


    --a;
    a--;

    var b = --a;
    1)연산먼저
    a = a - 1;
    2)대입
    b = a;

    var b = a--;
    1)대입먼저
    b = a;
    2)연산
    a = a - 1;

    증감연산자는 1씩 증가
    예) 2씩 증가 (복합 대입 연산자를 사용)
    a = a + 2; // a + = 2

    6.비교 연산자
        두 값을 비교
        크다, 크거나 같다, 작다, 작거나 같다, 다르다, 같다 (A = B는 대입이기 때문에)
        A > b  A >= B    A > B   A <= B      !=    A == B

        논리값을 결과로 반환 -> true, false

        같다
            -값이 같다(==)
            -값 + 자료형이 같다(===)

        1000 == "1000"  -> 값이 같다(true) : 자료형이 달라도 값이 같으면 true
        1000 === "1000" -> 자료형이 같다(false) : 값은 같으나 자료형이 다름.("1000" -> 문자(string))
                                                -> 자료형, 값 모두 같아야 true

        다르다
            -값이 다르다(!=)
            -값이다르거나 자료형이다르다(!==)

    7.논리 연산자
        ||  - OR 연산자 (합집합) -> 비교대산 2중 하나라도 true이면 true
            - 모두 false여야 false
            **true 조건인 값을 반환**  -> 비교연산자의 경우는 논리값을 반환함.
            (논리값 반환 X)

            false로 인식하는 조건
                논리값 false, 0, "(빈값), null, undefined

            true로 인식하는 조건
                -false로 인식하는 조건을 제외한 모든 값

                참||거짓 == 참 (앞의 참이 반환)
                참1||참2 == 참1 (앞의 참이 반환)
                거짓||참 == 참 (뒤의 참이 반환)
                    ---> 둘 중 하나라도 true이면 되기 때문에 컴퓨터는 앞에거 먼저 확인하고 참이면 !!앞!!의 값을 반환함
                    ex) var a = 1
                        var b = a || 10  --> 1   -> 둘다 참이기 때문에 앞의 거가 참이기때문에 뒤에 10은 볼필요 없음. 그래서 1이 반환됨.

        &&  - AND 연산자(교집합) -> 비교대상 2중 모두가 true -> 한개라도 false이면 false
                var a = 참1 && 참2 (뒤의 참이 반환)
                a = 참2
                -> 두개다 참이어야 하기 때문에 마지막까지 봐줘야함. 둘다 참일 경우 뒤에 참이 반환

        !   - NOT 연산자(부정)
            true --> false, false --> true

        var a = 0 || 10; -> true가 되는 조건은 10 이므로 10을 반환
        var a = 0 || ""; -> false 일지라도 마지막 조건 값인 "" 을 반환

    8.삼항 조건 연산자
        -단항(1항) - 연산 대상이 1개
                   - 증감 연산자
                        a++; a--;
                   - 논리 부정
                    !a;
                   - 복합 대입 연산자
                    a+=2;

        -이항(2항) - 연산대상이 2개
                        a + b
                        a * b
        -삼항(3항)
              1항       2항        3항
            (조건식) ? 참일때 값 : 거짓일 때 값;

            조건식이 참이면 참일때 값(왼쪽) 반환
            조건식이 거짓이면 거짓을때 값(오른쪽) 반환

    9.연산자의 우선순위
        1) ()
            1 + 3 * 10 -> 31
            (1 + 3) * 10; -> 40

        2) 단항 연산자
            ++a,b--;
            1 + a++;

        3) 산술연산자(+,-,/*,% - 나머지)

        4) 비교 연산자

        5) 논리

        6) 대입 (연산자의 우선순위가 가장 낮다)
         -최종적으로 마지막에 답을 대입하기 때문에 ┐
         var a = b + a;
             └─────┘
             a = ?                              ┘
